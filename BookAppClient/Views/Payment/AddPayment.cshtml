@model BookAppClient.Models.Payment

@{
    ViewBag.Title = "Add Payment";
}

<h2>Add Payment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Payment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.OrderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.OrderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PaymentDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(
                              model => model.PaymentMode,
                              new SelectList(
                                  new[] { "Card", "UPI" } // List of payment modes
                                                          // Default selected value from the model
                              ),
                              "-- Select Payment Mode --", // Placeholder text
                              new { @class = "form-control" } // HTML attributes for styling
                          )
                @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.PaymentStatus, htmlAttributes: new { @class = "control-label col-md-2", style = "display:none;" })
            <div class="col-md-10">
                <!-- Hidden input to set PaymentStatus to 'Success' by default -->
                @Html.HiddenFor(model => model.PaymentStatus, new { @value = "Success" })

                @Html.ValidationMessageFor(model => model.PaymentStatus, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Pay" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div class="text-center mt-4">
    <button class="btn btn-outline-warning" onclick="window.history.back();">Go Back</button>
</div>
