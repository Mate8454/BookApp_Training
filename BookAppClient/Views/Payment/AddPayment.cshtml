@model BookAppClient.Models.Payment

@{
    ViewBag.Title = "Add Payment";
}

<h2>Add Payment</h2>

@using (Html.BeginForm("AddPayment", "Payment", FormMethod.Post, new { id = "paymentForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Payment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.OrderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.OrderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PaymentDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(
                    model => model.PaymentMode,
                    new SelectList(new[] { "Card", "UPI" }),
                    "-- Select Payment Mode --",
                    new { @class = "form-control", id = "paymentMode", required = "required" }
                )
                @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none;">
            @Html.HiddenFor(model => model.PaymentStatus, new { @value = "Success" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Pay" class="btn btn-success" id="payButton" />
            </div>
        </div>
    </div>
}

<div class="text-center mt-4">
    <button class="btn btn-outline-warning" onclick="window.history.back();">Go Back</button>
</div>

<!-- Custom Popup Notification HTML and CSS -->
<div id="popup" class="popup">
    <div class="popup-content">
        <p>Payment Successful!</p>
        <button id="closePopup" class="btn btn-primary">OK</button>
    </div>
</div>

<style>
    .popup {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
    }

    .popup-content {
        background: white;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
    }

        .popup-content button {
            margin-top: 15px;
        }

    .text-danger {
        color: red;
    }
</style>

<!-- JavaScript for Validation and Custom Popup Notification -->
<script>
    document.getElementById('paymentForm').addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent immediate form submission

        // Get form values
        const orderId = document.getElementById('OrderId').value;
        const paymentDate = document.getElementById('PaymentDate').value;
        const paymentMode = document.getElementById('paymentMode').value;

        // Validate fields
        if (!orderId || !paymentDate || paymentMode === "-- Select Payment Mode --") {
            alert("Please fill in all fields and select a valid Payment Mode before proceeding.");
            return;
        }

        // Show the custom popup
        document.getElementById('popup').style.display = 'flex';

        // Handle popup close and form submission
        document.getElementById('closePopup').addEventListener('click', () => {
            document.getElementById('popup').style.display = 'none';
            // Submit the form after closing the popup
            event.target.submit();
        });
    });
</script>
