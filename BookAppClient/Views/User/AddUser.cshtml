@model BookAppClient.Models.User

<div class="container" style="max-width: 500px; margin-top: 50px;">
    <div class="card shadow-sm">
        <div class="card-body">
            <!-- Form Title -->
            <div class="text-center mb-4">
                <h4>Create New User</h4>
            </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <!-- Name Field -->
                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Email Field -->
                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Password Field -->
                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Role Field -->
                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "form-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Submit Button -->
                    <div class="form-group">
                        <div class="col-md-12">
                            <input type="submit" value="Create" class="btn btn-primary w-100" />
                        </div>
                    </div>
                </div>
            }

            <!-- Back Link -->
        <div class="text-center mt-4">
            <button class="btn btn-outline-warning" onclick="window.history.back();">Go to LogIn</button>
        </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
